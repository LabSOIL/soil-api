"""Modify name ID

Revision ID: 86a0eb669677
Revises: 1675aa811f26
Create Date: 2024-05-08 11:53:07.289552

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = "86a0eb669677"
down_revision: Union[str, None] = "1675aa811f26"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "soilprofile",
        sa.Column("profile_iterator", sa.Integer(), nullable=False),
    )
    op.add_column(
        "soilprofile",
        sa.Column(
            "gradient", sqlmodel.sql.sqltypes.AutoString(), nullable=False
        ),
    )
    op.drop_index("ix_soilprofile_name", table_name="soilprofile")
    op.create_index(
        op.f("ix_soilprofile_gradient"),
        "soilprofile",
        ["gradient"],
        unique=False,
    )
    op.create_index(
        op.f("ix_soilprofile_profile_iterator"),
        "soilprofile",
        ["profile_iterator"],
        unique=False,
    )
    op.create_unique_constraint(
        "unique_profile",
        "soilprofile",
        ["profile_iterator", "area_id", "gradient"],
    )
    op.drop_column("soilprofile", "name")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "soilprofile",
        sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=False),
    )
    op.drop_constraint("unique_profile", "soilprofile", type_="unique")
    op.drop_index(
        op.f("ix_soilprofile_profile_iterator"), table_name="soilprofile"
    )
    op.drop_index(op.f("ix_soilprofile_gradient"), table_name="soilprofile")
    op.create_index(
        "ix_soilprofile_name", "soilprofile", ["name"], unique=False
    )
    op.drop_column("soilprofile", "gradient")
    op.drop_column("soilprofile", "profile_iterator")
    # ### end Alembic commands ###
