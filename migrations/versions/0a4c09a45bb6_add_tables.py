"""Add tables

Revision ID: 0a4c09a45bb6
Revises: e7148cdfee6e
Create Date: 2024-04-04 17:08:09.963674

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '0a4c09a45bb6'
down_revision: Union[str, None] = 'e7148cdfee6e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('soiltype',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('iterator', sa.Integer(), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.PrimaryKeyConstraint('iterator'),
    sa.UniqueConstraint('id')
    )
    op.create_index(op.f('ix_soiltype_id'), 'soiltype', ['id'], unique=False)
    op.create_index(op.f('ix_soiltype_iterator'), 'soiltype', ['iterator'], unique=False)
    op.create_index(op.f('ix_soiltype_name'), 'soiltype', ['name'], unique=False)
    op.create_table('soilprofile',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('weather', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('topography', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('date_created', sa.DateTime(), nullable=True),
    sa.Column('soil_type_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('iterator', sa.Integer(), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.ForeignKeyConstraint(['soil_type_id'], ['soiltype.id'], ),
    sa.PrimaryKeyConstraint('iterator'),
    sa.UniqueConstraint('id')
    )
    op.create_index(op.f('ix_soilprofile_id'), 'soilprofile', ['id'], unique=False)
    op.create_index(op.f('ix_soilprofile_iterator'), 'soilprofile', ['iterator'], unique=False)
    op.create_index(op.f('ix_soilprofile_name'), 'soilprofile', ['name'], unique=False)
    op.create_index(op.f('ix_soilprofile_soil_type_id'), 'soilprofile', ['soil_type_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_soilprofile_soil_type_id'), table_name='soilprofile')
    op.drop_index(op.f('ix_soilprofile_name'), table_name='soilprofile')
    op.drop_index(op.f('ix_soilprofile_iterator'), table_name='soilprofile')
    op.drop_index(op.f('ix_soilprofile_id'), table_name='soilprofile')
    op.drop_table('soilprofile')
    op.drop_index(op.f('ix_soiltype_name'), table_name='soiltype')
    op.drop_index(op.f('ix_soiltype_iterator'), table_name='soiltype')
    op.drop_index(op.f('ix_soiltype_id'), table_name='soiltype')
    op.drop_table('soiltype')
    # ### end Alembic commands ###
