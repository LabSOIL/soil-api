"""Update fields in Sensor/SensorData

Revision ID: 6e1c3b167322
Revises: 88e8f91ea9e9
Create Date: 2024-09-02 10:31:54.500812

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '6e1c3b167322'
down_revision: Union[str, None] = '88e8f91ea9e9'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('sensor', sa.Column('serial_number', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.add_column('sensor', sa.Column('manufacturer', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.drop_index('ix_sensor_time_ingested_at_utc', table_name='sensor')
    op.drop_index('ix_sensor_time_recorded_at_utc', table_name='sensor')
    op.drop_column('sensor', 'time_ingested_at_utc')
    op.drop_column('sensor', 'elevation')
    op.drop_column('sensor', 'time_recorded_at_utc')
    op.add_column('sensordata', sa.Column('time_utc', sa.DateTime(), nullable=False))
    op.drop_index('ix_sensordata_iterator', table_name='sensordata')
    op.drop_index('ix_sensordata_time', table_name='sensordata')
    op.create_index(op.f('ix_sensordata_time_utc'), 'sensordata', ['time_utc'], unique=False)
    op.create_unique_constraint(None, 'sensordata', ['time_utc', 'sensor_id'])
    op.create_unique_constraint(None, 'sensordata', ['instrument_seq', 'sensor_id'])
    op.drop_column('sensordata', 'iterator')
    op.drop_column('sensordata', 'time')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('sensordata', sa.Column('time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.add_column('sensordata', sa.Column('iterator', sa.INTEGER(), autoincrement=True, nullable=False))
    op.drop_constraint(None, 'sensordata', type_='unique')
    op.drop_constraint(None, 'sensordata', type_='unique')
    op.drop_index(op.f('ix_sensordata_time_utc'), table_name='sensordata')
    op.create_index('ix_sensordata_time', 'sensordata', ['time'], unique=False)
    op.create_index('ix_sensordata_iterator', 'sensordata', ['iterator'], unique=False)
    op.drop_column('sensordata', 'time_utc')
    op.add_column('sensor', sa.Column('time_recorded_at_utc', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('sensor', sa.Column('elevation', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.add_column('sensor', sa.Column('time_ingested_at_utc', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.create_index('ix_sensor_time_recorded_at_utc', 'sensor', ['time_recorded_at_utc'], unique=False)
    op.create_index('ix_sensor_time_ingested_at_utc', 'sensor', ['time_ingested_at_utc'], unique=False)
    op.drop_column('sensor', 'manufacturer')
    op.drop_column('sensor', 'serial_number')
    # ### end Alembic commands ###
