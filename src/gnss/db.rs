//! `SeaORM` Entity, @generated by sea-orm-codegen 1.0.1

use chrono::NaiveDateTime;
use sea_orm::entity::prelude::*;
use uuid::Uuid;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "gnss")]
pub struct Model {
    pub name: Option<String>,
    pub last_updated: NaiveDateTime,
    #[sea_orm(primary_key)]
    pub id: Uuid,
    #[sea_orm(column_type = "Double", nullable)]
    pub latitude: Option<f64>,
    #[sea_orm(column_type = "Double", nullable)]
    pub longitude: Option<f64>,
    pub time: Option<NaiveDateTime>,
    pub comment: Option<String>,
    pub original_filename: Option<String>,
    #[sea_orm(column_type = "Double", nullable)]
    pub elevation_gps: Option<f64>,
    #[sea_orm(column_type = "Double", nullable)]
    pub x: Option<f64>,
    #[sea_orm(column_type = "Double", nullable)]
    pub y: Option<f64>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl ActiveModelBehavior for ActiveModel {}
